"use strict";
var _ = require('lodash');
var url = require('url');
var request = require('request-promise');
var http = require('http');
var https = require('https');
var ntlm = require('httpntlm').ntlm;
var OnpremiseUserCredentials = (function () {
    function OnpremiseUserCredentials(_siteUrl, _authOptions) {
        this._siteUrl = _siteUrl;
        this._authOptions = _authOptions;
    }
    OnpremiseUserCredentials.prototype.getAuth = function () {
        _.defaults(this._authOptions, { domain: '', workstation: '' });
        var ntlmOptions = _.assign({}, this._authOptions);
        ntlmOptions.url = this._siteUrl;
        var type1msg = ntlm.createType1Message(ntlmOptions);
        var isHttps = url.parse(this._siteUrl).protocol === 'https:';
        var keepaliveAgent = isHttps ? new https.Agent({ keepAlive: true, rejectUnauthorized: false }) :
            new http.Agent({ keepAlive: true });
        return request({
            url: this._siteUrl,
            method: 'GET',
            headers: {
                'Connection': 'keep-alive',
                'Authorization': type1msg,
                'Accept': 'application/json;odata=verbose'
            },
            agent: keepaliveAgent,
            resolveWithFullResponse: true,
            simple: false,
            strictSSL: false
        })
            .then(function (response) {
            var type2msg = ntlm.parseType2Message(response.headers['www-authenticate']);
            var type3msg = ntlm.createType3Message(type2msg, ntlmOptions);
            return {
                headers: {
                    'Connection': 'Close',
                    'Authorization': type3msg
                },
                options: {
                    agent: keepaliveAgent
                }
            };
        });
    };
    ;
    return OnpremiseUserCredentials;
}());
exports.OnpremiseUserCredentials = OnpremiseUserCredentials;
