"use strict";
var url = require('url');
function isAddinOnlyOnline(T) {
    return T.clientSecret !== undefined;
}
exports.isAddinOnlyOnline = isAddinOnlyOnline;
function isAddinOnlyOnpremise(T) {
    return T.shaThumbprint !== undefined;
}
exports.isAddinOnlyOnpremise = isAddinOnlyOnpremise;
function isUserCredentialsOnline(siteUrl, T) {
    var host = (url.parse(siteUrl)).host;
    var isOnPrem = host.indexOf('.sharepoint.com') === -1 && host.indexOf('.sharepoint.cn') === -1;
    if (!isOnPrem && T.username !== undefined && !isAdfsCredentials(T)) {
        return true;
    }
    return false;
}
exports.isUserCredentialsOnline = isUserCredentialsOnline;
function isUserCredentialsOnpremise(siteUrl, T) {
    var host = (url.parse(siteUrl)).host;
    var isOnPrem = host.indexOf('.sharepoint.com') === -1 && host.indexOf('.sharepoint.cn') === -1;
    if (isOnPrem && T.username !== undefined && !isAdfsCredentials(T)) {
        return true;
    }
    return false;
}
exports.isUserCredentialsOnpremise = isUserCredentialsOnpremise;
function isFbaCredentialsOnpremise(siteUrl, T) {
    var host = (url.parse(siteUrl)).host;
    var isOnPrem = host.indexOf('.sharepoint.com') === -1 && host.indexOf('.sharepoint.cn') === -1;
    if (isOnPrem && T.username !== undefined && T.fba) {
        return true;
    }
    return false;
}
exports.isFbaCredentialsOnpremise = isFbaCredentialsOnpremise;
function isAdfsCredentials(T) {
    return T.adfsUrl !== undefined;
}
exports.isAdfsCredentials = isAdfsCredentials;
