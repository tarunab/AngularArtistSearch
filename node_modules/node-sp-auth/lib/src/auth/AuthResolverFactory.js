"use strict";
var OnpremiseFbaCredentials_1 = require('./resolvers/OnpremiseFbaCredentials');
var OnpremiseUserCredentials_1 = require('./resolvers/OnpremiseUserCredentials');
var OnlineUserCredentials_1 = require('./resolvers/OnlineUserCredentials');
var OnlineAddinOnly_1 = require('./resolvers/OnlineAddinOnly');
var OnpremiseAddinOnly_1 = require('./resolvers/OnpremiseAddinOnly');
var AdfsCredentials_1 = require('./resolvers/AdfsCredentials');
var authOptions = require('./IAuthOptions');
var AuthResolverFactory = (function () {
    function AuthResolverFactory() {
    }
    AuthResolverFactory.resolve = function (siteUrl, options) {
        if (authOptions.isFbaCredentialsOnpremise(siteUrl, options)) {
            return new OnpremiseFbaCredentials_1.OnpremiseFbaCredentials(siteUrl, options);
        }
        if (authOptions.isUserCredentialsOnpremise(siteUrl, options)) {
            return new OnpremiseUserCredentials_1.OnpremiseUserCredentials(siteUrl, options);
        }
        if (authOptions.isUserCredentialsOnline(siteUrl, options)) {
            return new OnlineUserCredentials_1.OnlineUserCredentials(siteUrl, options);
        }
        if (authOptions.isAddinOnlyOnline(options)) {
            return new OnlineAddinOnly_1.OnlineAddinOnly(siteUrl, options);
        }
        if (authOptions.isAddinOnlyOnpremise(options)) {
            return new OnpremiseAddinOnly_1.OnpremiseAddinOnly(siteUrl, options);
        }
        if (authOptions.isAdfsCredentials(options)) {
            return new AdfsCredentials_1.AdfsCredentials(siteUrl, options);
        }
        throw new Error('Error while resolving authentication class');
    };
    return AuthResolverFactory;
}());
exports.AuthResolverFactory = AuthResolverFactory;
